import { Alert } from '../alermanager.types'

export function generateAlertEmailHtml(alert: Alert): string {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∞–ª–µ—Ä—Ç–æ–º –æ —Å–º–µ–Ω–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
	const isHardwareChange =
		alert.labels.alertname === 'Hardware_Change_Detected' ||
		alert.labels.category === 'hardware_change'

	// –†—É—Å—Å–∫–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∞–ª–µ—Ä—Ç–∞ –æ —Å–º–µ–Ω–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
	const statusText = isHardwareChange ? '–°—Ç–∞—Ç—É—Å' : 'Status'
	const severityText = isHardwareChange ? '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç' : 'Severity'
	const descriptionText = isHardwareChange ? '–û–ø–∏—Å–∞–Ω–∏–µ' : 'Description'
	const instanceText = isHardwareChange ? '–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ' : 'Instance'
	const startedText = isHardwareChange ? '–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ' : 'Started'
	const resolvedText = isHardwareChange ? '–£—Å—Ç—Ä–∞–Ω–µ–Ω–æ' : 'Resolved'
	const generatedText = isHardwareChange
		? '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–∏—Å—Ç–µ–º–æ–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è'
		: 'Generated by HW Monitor'

	// –†—É—Å—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –∞–ª–µ—Ä—Ç–∞ –æ —Å–º–µ–Ω–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
	const statusValue = isHardwareChange
		? alert.status.toUpperCase() === 'FIRING'
			? '–ê–ö–¢–ò–í–ï–ù'
			: '–£–°–¢–†–ê–ù–ï–ù'
		: alert.status.toUpperCase()

	const severityValue = isHardwareChange
		? alert.labels.severity.toUpperCase() === 'CRITICAL'
			? '–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø'
			: alert.labels.severity.toUpperCase() === 'WARNING'
				? '–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï'
				: alert.labels.severity.toUpperCase()
		: alert.labels.severity.toUpperCase()

	// –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –∞–ª–µ—Ä—Ç–∞ –æ —Å–º–µ–Ω–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
	const alertTitle = isHardwareChange
		? '‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è'
		: `üö® ${alert.labels.alertname}`

	return `
        <div style="font-family: Arial, sans-serif; padding: 20px; max-width: 600px;">
            <h2 style="color: ${getSeverityColor(alert.labels.severity)}">
                ${alertTitle}
            </h2>
            <div style="margin: 20px 0; padding: 15px; border-left: 4px solid ${getSeverityColor(alert.labels.severity)}; background-color: #f9f9f9; border-radius: 4px;">
                <p><strong>${statusText}:</strong> ${statusValue}</p>
                <p><strong>${severityText}:</strong> ${severityValue}</p>
                <p><strong>${descriptionText}:</strong> ${alert.annotations.description}</p>
                <p><strong>${instanceText}:</strong> ${alert.labels.instance}</p>
                <p><strong>${startedText}:</strong> ${new Date(alert.startsAt).toLocaleString()}</p>
                ${
					alert.status === 'resolved'
						? `<p><strong>${resolvedText}:</strong> ${new Date(alert.endsAt).toLocaleString()}</p>`
						: ''
				}
            </div>
            <div style="font-size: 12px; color: #666; text-align: center; margin-top: 20px;">
                <p>${generatedText}</p>
            </div>
        </div>
    `
}

export function generateAlertTelegramText(alert: Alert): string {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∞–ª–µ—Ä—Ç–æ–º –æ —Å–º–µ–Ω–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏–ª–∏ –¥—Ä—É–≥–∏–º —Ç–∏–ø–æ–º –∞–ª–µ—Ä—Ç–∞
	const isHardwareChange =
		alert.labels.alertname === 'Hardware_Change_Detected' ||
		alert.labels.category === 'hardware_change'

	// –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –¥–ª—è –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
	const alertTitle = isHardwareChange
		? '‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è'
		: `üö® ${alert.labels.alertname}`

	const statusText = '–°—Ç–∞—Ç—É—Å'
	const severityText = '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç'
	const descriptionText = '–û–ø–∏—Å–∞–Ω–∏–µ'
	const instanceText = '–†–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ'
	const startedText = '–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ'
	const resolvedText = '–£—Å—Ç—Ä–∞–Ω–µ–Ω–æ'

	// –†—É—Å—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ –∏ —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏
	const statusValue =
		alert.status.toUpperCase() === 'FIRING' ? '–ê–ö–¢–ò–í–ï–ù' : '–£–°–¢–†–ê–ù–ï–ù'
	const severityValue =
		alert.labels.severity.toUpperCase() === 'CRITICAL'
			? '–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø'
			: alert.labels.severity.toUpperCase() === 'WARNING'
				? '–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï'
				: alert.labels.severity.toUpperCase()

	// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –≤ —Ä—É—Å—Å–∫–æ–º —Å—Ç–∏–ª–µ
	const formatDate = (date: string) => {
		return new Date(date).toLocaleString('ru-RU', {
			day: '2-digit',
			month: '2-digit',
			year: 'numeric',
			hour: '2-digit',
			minute: '2-digit',
			second: '2-digit'
		})
	}

	return `
${alertTitle}
*${statusText}:* ${statusValue}
*${severityText}:* ${severityValue}
*${descriptionText}:* ${alert.annotations.description}
*${instanceText}:* ${alert.labels.instance}
*${startedText}:* ${formatDate(alert.startsAt)}
${alert.status === 'resolved' ? `*${resolvedText}:* ${formatDate(alert.endsAt)}` : ''}
`.trim()
}

function getSeverityColor(severity: string): string {
	switch (severity.toLowerCase()) {
		case 'critical':
			return '#dc3545'
		case 'warning':
			return '#ffc107'
		default:
			return '#17a2b8'
	}
}
