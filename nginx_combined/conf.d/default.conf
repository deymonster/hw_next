map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}
# Основной сервер для monitoring.local на порту 80
server {
    listen 80;
    server_name _;

    # Увеличиваем максимальный размер тела запроса для загрузки файлов
    client_max_body_size 25M;

    # Глобальные настройки проксирования
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_redirect off;

    # Проксирование запросов к NextJS приложению
    location / {
        proxy_pass http://nextjs:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host   $host;
        proxy_set_header X-Forwarded-Port $server_port;
        

        # Настройки для кук (важно для работы с IP-адресом)
        proxy_cookie_path     / /;
        
        # Увеличить таймауты для длительных запросов
        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;
        proxy_read_timeout         60s;
        
        # Для WebSocket и Server Actions
        proxy_set_header Upgrade    $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # Проксирование запросов к Prometheus (с аутентификацией)
    location /prometheus/ {
        auth_basic "Prometheus";
        auth_basic_user_file /etc/nginx/auth/.htpasswd;
        proxy_pass http://prometheus:9090/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Проксирование запросов к API перезагрузки Prometheus
    location /prometheus/-/reload {
        auth_basic "Prometheus";
        auth_basic_user_file /etc/nginx/auth/.htpasswd;
        proxy_pass http://prometheus:9090/-/reload;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Проксирование запросов к метрикам агентов
    location ~ ^/metrics/(?<target>.+)$ {
        proxy_set_header X-Agent-Handshake-Key "VERY_SECRET_KEY";
        proxy_pass http://$target/metrics;
        proxy_set_header Host $target;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Проксирование запросов к хранилищу файлов
    location /uploads/ {
        alias /usr/share/nginx/html/uploads/;
        try_files $uri $uri/ =404;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
        
        # Для отладки
        add_header X-Debug-Path $request_filename always;
    }

    # Проверка здоровья
    location = /health {
        return 200 'OK';
        add_header Content-Type text/plain;
    }
}

# Сохраняем обратную совместимость для Prometheus на порту 8080
server {
    listen 8080;

    # Добавляем логирование
    access_log /var/log/nginx/metrics_access.log;
    error_log /var/log/nginx/metrics_error.log debug;
    
    # Используем регулярное выражение для извлечения адреса агента из URL
    location ~ ^/metrics/(?<target>.+)$ {
        # Добавляем заголовок с секретным ключом
        proxy_set_header X-Agent-Handshake-Key "VERY_SECRET_KEY";
        
        # Проксируем запрос к агенту
        proxy_pass http://$target/metrics;
        
        # Добавляем другие полезные заголовки
        proxy_set_header Host $target;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Все запросы к Prometheus защищены единой аутентификацией
    location /prometheus/ {
        auth_basic "Prometheus";
        auth_basic_user_file /etc/nginx/auth/.htpasswd;
        proxy_pass http://prometheus_container:9090/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Проксирование запросов к API перезагрузки Prometheus
    location /prometheus/-/reload {
        auth_basic "Prometheus";
        auth_basic_user_file /etc/nginx/auth/.htpasswd;
        proxy_pass http://prometheus_container:9090/-/reload;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}