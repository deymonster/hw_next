services:
    postgres:
        image: postgres:13
        container_name: postgres_container
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - '${POSTGRES_PORT}:5432'
        volumes:
            - pg_data:/var/lib/postgresql/data
        networks:
            - hw-network
        env_file:
            - .env.prod

    db-migrate:
        image: deymonster/hw-monitor:v1.0.0-alpha.7 # Обновить версию
        container_name: db-migrate
        command: npx prisma migrate deploy
        depends_on:
            - postgres
        env_file:
            - .env.prod
        networks:
            - hw-network
        restart: 'no'

    nextjs:
        image: deymonster/hw-monitor:v1.0.0-alpha.7 # Обновить версию
        container_name: nextjs_app
        user: '1001:65533'
        ports:
            - '0.0.0.0:3000:3000'
            - '0.0.0.0:3001:3001' # Добавить эту строку для WebSocket
        depends_on:
            - postgres
            - redis
            - db-migrate
        env_file:
            - .env.prod
        networks:
            - hw-network
        restart: unless-stopped
        volumes:
            - ./storage/logs:/app/storage/logs
            - ./storage/uploads:/app/storage/uploads
            - nextjs_prometheus_config:/shared-config

    prometheus-config-init:
        image: deymonster/hw-monitor:v1.0.0-alpha.7 # Обновить версию
        container_name: prometheus_config_init
        user: root
        command: >
            sh -c "mkdir -p /shared-config && 
                   chmod 777 /shared-config &&
                   cp -r /app/prometheus/* /shared-config/ && 
                   chown -R 65534:65534 /shared-config &&
                   chmod -R 755 /shared-config"
        volumes:
            - nextjs_prometheus_config:/shared-config
        restart: 'no'

    prometheus:
        image: prom/prometheus:v2.36.0
        container_name: prometheus_container
        expose:
            - 9090
        networks:
            - hw-network
        volumes:
            - nextjs_prometheus_config:/etc/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
            - '--web.enable-lifecycle'
        env_file:
            - .env.prod
        depends_on:
            - prometheus-config-init
            - licd

    alertmanager:
        image: prom/alertmanager:v0.26.0
        container_name: alertmanager_container
        ports:
            - '9093:9093'
        volumes:
            - nextjs_prometheus_config:/etc/alertmanager
        command:
            - '--config.file=/etc/alertmanager/alertmanager.yml'
            - '--storage.path=/alertmanager'
        networks:
            - hw-network
        depends_on:
            - prometheus-config-init

    nginx-proxy:
        image: deymonster/hw-monitor-nginx-combined:v1.0.0-alpha.7
        container_name: nginx_combined
        ports:
            - '0.0.0.0:80:80' # Основной порт для monitoring.local
            - '0.0.0.0:8080:8080' # Для обратной совместимости с Prometheus
        volumes:
            - ./nginx/auth/.htpasswd:/etc/nginx/auth/.htpasswd
            - ./storage/uploads:/usr/share/nginx/html/uploads
        networks:
            - hw-network
        depends_on:
            - nextjs
            - prometheus
        restart: unless-stopped

    redis:
        image: redis:alpine
        container_name: redis_container
        env_file:
            - .env.prod
        command: redis-server --requirepass ${REDIS_PASSWORD}
        ports:
            - '6379:6379'
        volumes:
            - redis_data:/data
        networks:
            - hw-network

    licd:
        image: deymonster/hw-monitor-licd:v1.0.0-alpha.7
        container_name: licd
        environment:
            - MAX_AGENTS=50
            - JOB_NAME=windows-agents
            - STORAGE_FILE_PATH=/data/licd.db
        expose:
            - '8081'
        volumes:
            - licd_data:/data
        networks:
            - hw-network
        restart: unless-stopped

volumes:
    pg_data:
    redis_data:
    prom-data:
    prom-configs:
    uploads:
        driver: local
    nextjs_prometheus_config:
        driver: local
    licd_data:

networks:
    hw-network:
