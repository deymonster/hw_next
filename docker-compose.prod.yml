services:
    postgres:
        image: postgres:13
        container_name: postgres_container
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - '${POSTGRES_PORT}:5432'
        volumes:
            - pg_data:/var/lib/postgresql/data
        networks:
            - hw-network
        env_file:
            - .env

    nextjs:
      image: deymonster/hw-monitor:latest
      container_name: nextjs_app
      ports:
        - "3000:3000"
      depends_on:
        - postgres
        - redis
      env_file:
        - .env.prod
      networks:
        - hw-network
      restart: unless-stopped
      volumes:
        - ./storage/logs:/app/storage/logs
        - ./storage/uploads:/app/storage/uploads

    prometheus:
        image: prom/prometheus:v2.36.0
        container_name: prometheus_container
        expose:
            - 9090
        networks:
            - hw-network
        volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
            - ./prometheus/targets:/etc/prometheus/targets:ro
            - ./prometheus/alerts:/etc/prometheus/alerts:ro
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
            - '--web.enable-lifecycle'
        env_file:
            - .env

    alertmanager:
        image: prom/alertmanager:v0.26.0
        container_name: alertmanager_container
        ports:
            - '9093:9093'
        volumes:
            - ./prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml
        command:
            - '--config.file=/etc/alertmanager/alertmanager.yml'
            - '--storage.path=/alertmanager'
        networks:
            - hw-network
        depends_on:
            - nextjs

    nginx-combined:
        image: deymonster/hw-monitor-nginx-combined:latest
        container_name: nginx_combined
        ports:
            - '0.0.0.0:80:80'   # Основной порт для monitoring.local
            - '8080:8080' # Для обратной совместимости с Prometheus
        volumes:
            - ./nginx_combined/conf.d:/etc/nginx/conf.d
            - ./nginx/auth/.htpasswd:/etc/nginx/auth/.htpasswd
            - ./storage/uploads:/usr/share/nginx/html/uploads
        networks:
            - hw-network
        depends_on:
            - nextjs
            - prometheus
        restart: unless-stopped

    redis:
        image: redis:alpine
        container_name: redis_container
        env_file:
            - .env
        command: redis-server --requirepass ${REDIS_PASSWORD}
        ports:
            - '6379:6379'
        volumes:
            - redis_data:/data
        networks:
            - hw-network

volumes:
    pg_data:
    redis_data:
    prom-data:
    prom-configs:
    uploads:
        driver: local

networks:
    hw-network:
